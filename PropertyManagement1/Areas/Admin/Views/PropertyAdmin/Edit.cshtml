@model PropertyManagement1.Models.Property

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2 style="text-align:center">Edit</h2>



@using (Html.BeginForm("Edit", "PropertyAdmin",
    FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
 
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)



    <div class="form-group">
        @Html.LabelFor(model => model.Property_Name,"Ten Bất Động Sản" ,htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Property_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Property_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Property_Type_ID, "Loại Bất Động Sản", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Property_Type_ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Property_Type_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, "Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Thành Phố
        </label>
        <div class="col-md-10">
            @Html.DropDownList("CityList", null, "--Select City--", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">
            Quận
        </label>
        <div class="col-md-10">
            @Html.DropDownList("District_ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.District_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address,"Địa Chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Area,"Diện Tích", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bed_Room, "Phòng Ngủ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bed_Room, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Bed_Room, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Bath_Room,"Phòng Tắm", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Bath_Room, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Bath_Room, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price,"Giá", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Installment_Rate, "Tỷ Lệ Trả Góp", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Installment_Rate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Installment_Rate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Avatar,"Ảnh Đại Diện", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (!String.IsNullOrEmpty(Model.Avatar) && Model.Avatar != "")
            {<img src="@(Url.Content("~/Other/hinh/" + Model.Avatar))" width="80" />}
            <input name="file" type="file" multiple />
            @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Album, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="files" type="file" multiple />
            @Html.EditorFor(model => model.Album, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @if (!String.IsNullOrEmpty(Model.Album) && Model.Album != "")
            {
                foreach (var image in Model.Album.Split(';'))
                {
                    if (!String.IsNullOrEmpty(image) || image != "")
                    {
                        int i = 0;
                        <span id="image-@(i)">
                            <img src="@(Url.Content("~/Other/hinh/" + image))" width="80" />
                            <button type="button" class="btn btn-danger" onclick="@("deleteImage(\"" + image + "\"," + Model.ID + "," + i + ");")">Delete</button>
                        </span>
                        i++;
                    }
                }

            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Property_Status_ID, "Trạng Thái Bất Động Sản", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Property_Status_ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Property_Status_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
<script>
    function deleteImage(image, id, i) {
        event.preventDefault();
        $.post("/Admin/PropertyAdmin/deleteImage",
            {
                imageName: image,
                id: id
            },
            function (data, status) {
                $("#album").val(data);
                $("#image-" + i).hide();
            });
    }
</script>

<div>
    @Html.ActionLink("Trở Lại Danh Sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
